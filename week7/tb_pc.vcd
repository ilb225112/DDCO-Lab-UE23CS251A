$date
	Thu Oct 24 15:05:46 2024
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module tb $end
$var wire 16 ! pc [15:0] $end
$var reg 1 " add $end
$var reg 1 # clk $end
$var reg 1 $ inc $end
$var reg 16 % offset [15:0] $end
$var reg 1 & reset $end
$var reg 1 ' sub $end
$var integer 32 ( i [31:0] $end
$scope module pc_0 $end
$var wire 1 " add $end
$var wire 1 # clk $end
$var wire 1 $ inc $end
$var wire 16 ) offset [15:0] $end
$var wire 1 & reset $end
$var wire 1 ' sub $end
$var wire 16 * pc [15:0] $end
$var wire 1 + load $end
$var wire 16 , c [15:0] $end
$scope module or3_0 $end
$var wire 1 " i0 $end
$var wire 1 ' i1 $end
$var wire 1 $ i2 $end
$var wire 1 - t $end
$var wire 1 + o $end
$scope module or2_0 $end
$var wire 1 " i0 $end
$var wire 1 ' i1 $end
$var wire 1 - o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 $ i0 $end
$var wire 1 - i1 $end
$var wire 1 + o $end
$upscope $end
$upscope $end
$scope module pc_slice_0 $end
$var wire 1 . cin $end
$var wire 1 # clk $end
$var wire 1 $ inc $end
$var wire 1 + load $end
$var wire 1 / offset $end
$var wire 1 & reset $end
$var wire 1 ' sub $end
$var wire 1 0 t $end
$var wire 1 1 pc $end
$var wire 1 2 in $end
$var wire 1 3 cout $end
$scope module _i0 $end
$var wire 1 / i0 $end
$var wire 1 ' i1 $end
$var wire 1 0 o $end
$upscope $end
$scope module addsub_0 $end
$var wire 1 4 addsub $end
$var wire 1 $ cin $end
$var wire 1 0 i1 $end
$var wire 1 5 t $end
$var wire 1 2 sumdiff $end
$var wire 1 1 i0 $end
$var wire 1 3 cout $end
$scope module _i0 $end
$var wire 1 $ cin $end
$var wire 1 6 t2 $end
$var wire 1 7 t1 $end
$var wire 1 8 t0 $end
$var wire 1 2 sum $end
$var wire 1 5 i1 $end
$var wire 1 1 i0 $end
$var wire 1 3 cout $end
$scope module _i0 $end
$var wire 1 $ i2 $end
$var wire 1 9 t $end
$var wire 1 2 o $end
$var wire 1 5 i1 $end
$var wire 1 1 i0 $end
$scope module xor2_0 $end
$var wire 1 9 o $end
$var wire 1 5 i1 $end
$var wire 1 1 i0 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 $ i0 $end
$var wire 1 9 i1 $end
$var wire 1 2 o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 8 o $end
$var wire 1 5 i1 $end
$var wire 1 1 i0 $end
$upscope $end
$scope module _i2 $end
$var wire 1 $ i1 $end
$var wire 1 7 o $end
$var wire 1 5 i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 $ i0 $end
$var wire 1 6 o $end
$var wire 1 1 i1 $end
$upscope $end
$scope module _i4 $end
$var wire 1 8 i0 $end
$var wire 1 7 i1 $end
$var wire 1 6 i2 $end
$var wire 1 : t $end
$var wire 1 3 o $end
$scope module or2_0 $end
$var wire 1 8 i0 $end
$var wire 1 7 i1 $end
$var wire 1 : o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 6 i0 $end
$var wire 1 : i1 $end
$var wire 1 3 o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 0 i0 $end
$var wire 1 4 i1 $end
$var wire 1 5 o $end
$upscope $end
$upscope $end
$scope module dfrl_0 $end
$var wire 1 # clk $end
$var wire 1 2 in $end
$var wire 1 + load $end
$var wire 1 & reset $end
$var wire 1 1 out $end
$var wire 1 ; _in $end
$scope module dfr_1 $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 1 < reset_ $end
$var wire 1 1 out $end
$var wire 1 ; in $end
$var wire 1 = df_in $end
$scope module and2_0 $end
$var wire 1 = o $end
$var wire 1 < i1 $end
$var wire 1 ; i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 # clk $end
$var wire 1 = in $end
$var wire 1 1 out $end
$var reg 1 1 df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 & i $end
$var wire 1 < o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 1 i0 $end
$var wire 1 2 i1 $end
$var wire 1 + j $end
$var wire 1 ; o $end
$upscope $end
$upscope $end
$upscope $end
$scope module pc_slice_1 $end
$var wire 1 > cin $end
$var wire 1 # clk $end
$var wire 1 $ inc $end
$var wire 1 + load $end
$var wire 1 ? offset $end
$var wire 1 & reset $end
$var wire 1 ' sub $end
$var wire 1 @ t $end
$var wire 1 A pc $end
$var wire 1 B in $end
$var wire 1 C cout $end
$scope module _i0 $end
$var wire 1 ? i0 $end
$var wire 1 ' i1 $end
$var wire 1 @ o $end
$upscope $end
$scope module addsub_0 $end
$var wire 1 D addsub $end
$var wire 1 > cin $end
$var wire 1 @ i1 $end
$var wire 1 E t $end
$var wire 1 B sumdiff $end
$var wire 1 A i0 $end
$var wire 1 C cout $end
$scope module _i0 $end
$var wire 1 > cin $end
$var wire 1 F t2 $end
$var wire 1 G t1 $end
$var wire 1 H t0 $end
$var wire 1 B sum $end
$var wire 1 E i1 $end
$var wire 1 A i0 $end
$var wire 1 C cout $end
$scope module _i0 $end
$var wire 1 > i2 $end
$var wire 1 I t $end
$var wire 1 B o $end
$var wire 1 E i1 $end
$var wire 1 A i0 $end
$scope module xor2_0 $end
$var wire 1 I o $end
$var wire 1 E i1 $end
$var wire 1 A i0 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 > i0 $end
$var wire 1 I i1 $end
$var wire 1 B o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 H o $end
$var wire 1 E i1 $end
$var wire 1 A i0 $end
$upscope $end
$scope module _i2 $end
$var wire 1 > i1 $end
$var wire 1 G o $end
$var wire 1 E i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 > i0 $end
$var wire 1 F o $end
$var wire 1 A i1 $end
$upscope $end
$scope module _i4 $end
$var wire 1 H i0 $end
$var wire 1 G i1 $end
$var wire 1 F i2 $end
$var wire 1 J t $end
$var wire 1 C o $end
$scope module or2_0 $end
$var wire 1 H i0 $end
$var wire 1 G i1 $end
$var wire 1 J o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 F i0 $end
$var wire 1 J i1 $end
$var wire 1 C o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 @ i0 $end
$var wire 1 D i1 $end
$var wire 1 E o $end
$upscope $end
$upscope $end
$scope module dfrl_0 $end
$var wire 1 # clk $end
$var wire 1 B in $end
$var wire 1 + load $end
$var wire 1 & reset $end
$var wire 1 A out $end
$var wire 1 K _in $end
$scope module dfr_1 $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 1 L reset_ $end
$var wire 1 A out $end
$var wire 1 K in $end
$var wire 1 M df_in $end
$scope module and2_0 $end
$var wire 1 M o $end
$var wire 1 L i1 $end
$var wire 1 K i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 # clk $end
$var wire 1 M in $end
$var wire 1 A out $end
$var reg 1 A df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 & i $end
$var wire 1 L o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 A i0 $end
$var wire 1 B i1 $end
$var wire 1 + j $end
$var wire 1 K o $end
$upscope $end
$upscope $end
$upscope $end
$scope module pc_slice_10 $end
$var wire 1 N cin $end
$var wire 1 # clk $end
$var wire 1 $ inc $end
$var wire 1 + load $end
$var wire 1 O offset $end
$var wire 1 & reset $end
$var wire 1 ' sub $end
$var wire 1 P t $end
$var wire 1 Q pc $end
$var wire 1 R in $end
$var wire 1 S cout $end
$scope module _i0 $end
$var wire 1 O i0 $end
$var wire 1 ' i1 $end
$var wire 1 P o $end
$upscope $end
$scope module addsub_0 $end
$var wire 1 T addsub $end
$var wire 1 N cin $end
$var wire 1 P i1 $end
$var wire 1 U t $end
$var wire 1 R sumdiff $end
$var wire 1 Q i0 $end
$var wire 1 S cout $end
$scope module _i0 $end
$var wire 1 N cin $end
$var wire 1 V t2 $end
$var wire 1 W t1 $end
$var wire 1 X t0 $end
$var wire 1 R sum $end
$var wire 1 U i1 $end
$var wire 1 Q i0 $end
$var wire 1 S cout $end
$scope module _i0 $end
$var wire 1 N i2 $end
$var wire 1 Y t $end
$var wire 1 R o $end
$var wire 1 U i1 $end
$var wire 1 Q i0 $end
$scope module xor2_0 $end
$var wire 1 Y o $end
$var wire 1 U i1 $end
$var wire 1 Q i0 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 N i0 $end
$var wire 1 Y i1 $end
$var wire 1 R o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 X o $end
$var wire 1 U i1 $end
$var wire 1 Q i0 $end
$upscope $end
$scope module _i2 $end
$var wire 1 N i1 $end
$var wire 1 W o $end
$var wire 1 U i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 N i0 $end
$var wire 1 V o $end
$var wire 1 Q i1 $end
$upscope $end
$scope module _i4 $end
$var wire 1 X i0 $end
$var wire 1 W i1 $end
$var wire 1 V i2 $end
$var wire 1 Z t $end
$var wire 1 S o $end
$scope module or2_0 $end
$var wire 1 X i0 $end
$var wire 1 W i1 $end
$var wire 1 Z o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 V i0 $end
$var wire 1 Z i1 $end
$var wire 1 S o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 P i0 $end
$var wire 1 T i1 $end
$var wire 1 U o $end
$upscope $end
$upscope $end
$scope module dfrl_0 $end
$var wire 1 # clk $end
$var wire 1 R in $end
$var wire 1 + load $end
$var wire 1 & reset $end
$var wire 1 Q out $end
$var wire 1 [ _in $end
$scope module dfr_1 $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 1 \ reset_ $end
$var wire 1 Q out $end
$var wire 1 [ in $end
$var wire 1 ] df_in $end
$scope module and2_0 $end
$var wire 1 ] o $end
$var wire 1 \ i1 $end
$var wire 1 [ i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 # clk $end
$var wire 1 ] in $end
$var wire 1 Q out $end
$var reg 1 Q df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 & i $end
$var wire 1 \ o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 Q i0 $end
$var wire 1 R i1 $end
$var wire 1 + j $end
$var wire 1 [ o $end
$upscope $end
$upscope $end
$upscope $end
$scope module pc_slice_11 $end
$var wire 1 ^ cin $end
$var wire 1 # clk $end
$var wire 1 $ inc $end
$var wire 1 + load $end
$var wire 1 _ offset $end
$var wire 1 & reset $end
$var wire 1 ' sub $end
$var wire 1 ` t $end
$var wire 1 a pc $end
$var wire 1 b in $end
$var wire 1 c cout $end
$scope module _i0 $end
$var wire 1 _ i0 $end
$var wire 1 ' i1 $end
$var wire 1 ` o $end
$upscope $end
$scope module addsub_0 $end
$var wire 1 d addsub $end
$var wire 1 ^ cin $end
$var wire 1 ` i1 $end
$var wire 1 e t $end
$var wire 1 b sumdiff $end
$var wire 1 a i0 $end
$var wire 1 c cout $end
$scope module _i0 $end
$var wire 1 ^ cin $end
$var wire 1 f t2 $end
$var wire 1 g t1 $end
$var wire 1 h t0 $end
$var wire 1 b sum $end
$var wire 1 e i1 $end
$var wire 1 a i0 $end
$var wire 1 c cout $end
$scope module _i0 $end
$var wire 1 ^ i2 $end
$var wire 1 i t $end
$var wire 1 b o $end
$var wire 1 e i1 $end
$var wire 1 a i0 $end
$scope module xor2_0 $end
$var wire 1 i o $end
$var wire 1 e i1 $end
$var wire 1 a i0 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 ^ i0 $end
$var wire 1 i i1 $end
$var wire 1 b o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 h o $end
$var wire 1 e i1 $end
$var wire 1 a i0 $end
$upscope $end
$scope module _i2 $end
$var wire 1 ^ i1 $end
$var wire 1 g o $end
$var wire 1 e i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 ^ i0 $end
$var wire 1 f o $end
$var wire 1 a i1 $end
$upscope $end
$scope module _i4 $end
$var wire 1 h i0 $end
$var wire 1 g i1 $end
$var wire 1 f i2 $end
$var wire 1 j t $end
$var wire 1 c o $end
$scope module or2_0 $end
$var wire 1 h i0 $end
$var wire 1 g i1 $end
$var wire 1 j o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 f i0 $end
$var wire 1 j i1 $end
$var wire 1 c o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 ` i0 $end
$var wire 1 d i1 $end
$var wire 1 e o $end
$upscope $end
$upscope $end
$scope module dfrl_0 $end
$var wire 1 # clk $end
$var wire 1 b in $end
$var wire 1 + load $end
$var wire 1 & reset $end
$var wire 1 a out $end
$var wire 1 k _in $end
$scope module dfr_1 $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 1 l reset_ $end
$var wire 1 a out $end
$var wire 1 k in $end
$var wire 1 m df_in $end
$scope module and2_0 $end
$var wire 1 m o $end
$var wire 1 l i1 $end
$var wire 1 k i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 # clk $end
$var wire 1 m in $end
$var wire 1 a out $end
$var reg 1 a df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 & i $end
$var wire 1 l o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 a i0 $end
$var wire 1 b i1 $end
$var wire 1 + j $end
$var wire 1 k o $end
$upscope $end
$upscope $end
$upscope $end
$scope module pc_slice_12 $end
$var wire 1 n cin $end
$var wire 1 # clk $end
$var wire 1 $ inc $end
$var wire 1 + load $end
$var wire 1 o offset $end
$var wire 1 & reset $end
$var wire 1 ' sub $end
$var wire 1 p t $end
$var wire 1 q pc $end
$var wire 1 r in $end
$var wire 1 s cout $end
$scope module _i0 $end
$var wire 1 o i0 $end
$var wire 1 ' i1 $end
$var wire 1 p o $end
$upscope $end
$scope module addsub_0 $end
$var wire 1 t addsub $end
$var wire 1 n cin $end
$var wire 1 p i1 $end
$var wire 1 u t $end
$var wire 1 r sumdiff $end
$var wire 1 q i0 $end
$var wire 1 s cout $end
$scope module _i0 $end
$var wire 1 n cin $end
$var wire 1 v t2 $end
$var wire 1 w t1 $end
$var wire 1 x t0 $end
$var wire 1 r sum $end
$var wire 1 u i1 $end
$var wire 1 q i0 $end
$var wire 1 s cout $end
$scope module _i0 $end
$var wire 1 n i2 $end
$var wire 1 y t $end
$var wire 1 r o $end
$var wire 1 u i1 $end
$var wire 1 q i0 $end
$scope module xor2_0 $end
$var wire 1 y o $end
$var wire 1 u i1 $end
$var wire 1 q i0 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 n i0 $end
$var wire 1 y i1 $end
$var wire 1 r o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 x o $end
$var wire 1 u i1 $end
$var wire 1 q i0 $end
$upscope $end
$scope module _i2 $end
$var wire 1 n i1 $end
$var wire 1 w o $end
$var wire 1 u i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 n i0 $end
$var wire 1 v o $end
$var wire 1 q i1 $end
$upscope $end
$scope module _i4 $end
$var wire 1 x i0 $end
$var wire 1 w i1 $end
$var wire 1 v i2 $end
$var wire 1 z t $end
$var wire 1 s o $end
$scope module or2_0 $end
$var wire 1 x i0 $end
$var wire 1 w i1 $end
$var wire 1 z o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 v i0 $end
$var wire 1 z i1 $end
$var wire 1 s o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 p i0 $end
$var wire 1 t i1 $end
$var wire 1 u o $end
$upscope $end
$upscope $end
$scope module dfrl_0 $end
$var wire 1 # clk $end
$var wire 1 r in $end
$var wire 1 + load $end
$var wire 1 & reset $end
$var wire 1 q out $end
$var wire 1 { _in $end
$scope module dfr_1 $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 1 | reset_ $end
$var wire 1 q out $end
$var wire 1 { in $end
$var wire 1 } df_in $end
$scope module and2_0 $end
$var wire 1 } o $end
$var wire 1 | i1 $end
$var wire 1 { i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 # clk $end
$var wire 1 } in $end
$var wire 1 q out $end
$var reg 1 q df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 & i $end
$var wire 1 | o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 q i0 $end
$var wire 1 r i1 $end
$var wire 1 + j $end
$var wire 1 { o $end
$upscope $end
$upscope $end
$upscope $end
$scope module pc_slice_13 $end
$var wire 1 ~ cin $end
$var wire 1 # clk $end
$var wire 1 $ inc $end
$var wire 1 + load $end
$var wire 1 !" offset $end
$var wire 1 & reset $end
$var wire 1 ' sub $end
$var wire 1 "" t $end
$var wire 1 #" pc $end
$var wire 1 $" in $end
$var wire 1 %" cout $end
$scope module _i0 $end
$var wire 1 !" i0 $end
$var wire 1 ' i1 $end
$var wire 1 "" o $end
$upscope $end
$scope module addsub_0 $end
$var wire 1 &" addsub $end
$var wire 1 ~ cin $end
$var wire 1 "" i1 $end
$var wire 1 '" t $end
$var wire 1 $" sumdiff $end
$var wire 1 #" i0 $end
$var wire 1 %" cout $end
$scope module _i0 $end
$var wire 1 ~ cin $end
$var wire 1 (" t2 $end
$var wire 1 )" t1 $end
$var wire 1 *" t0 $end
$var wire 1 $" sum $end
$var wire 1 '" i1 $end
$var wire 1 #" i0 $end
$var wire 1 %" cout $end
$scope module _i0 $end
$var wire 1 ~ i2 $end
$var wire 1 +" t $end
$var wire 1 $" o $end
$var wire 1 '" i1 $end
$var wire 1 #" i0 $end
$scope module xor2_0 $end
$var wire 1 +" o $end
$var wire 1 '" i1 $end
$var wire 1 #" i0 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 ~ i0 $end
$var wire 1 +" i1 $end
$var wire 1 $" o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 *" o $end
$var wire 1 '" i1 $end
$var wire 1 #" i0 $end
$upscope $end
$scope module _i2 $end
$var wire 1 ~ i1 $end
$var wire 1 )" o $end
$var wire 1 '" i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 ~ i0 $end
$var wire 1 (" o $end
$var wire 1 #" i1 $end
$upscope $end
$scope module _i4 $end
$var wire 1 *" i0 $end
$var wire 1 )" i1 $end
$var wire 1 (" i2 $end
$var wire 1 ," t $end
$var wire 1 %" o $end
$scope module or2_0 $end
$var wire 1 *" i0 $end
$var wire 1 )" i1 $end
$var wire 1 ," o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 (" i0 $end
$var wire 1 ," i1 $end
$var wire 1 %" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 "" i0 $end
$var wire 1 &" i1 $end
$var wire 1 '" o $end
$upscope $end
$upscope $end
$scope module dfrl_0 $end
$var wire 1 # clk $end
$var wire 1 $" in $end
$var wire 1 + load $end
$var wire 1 & reset $end
$var wire 1 #" out $end
$var wire 1 -" _in $end
$scope module dfr_1 $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 1 ." reset_ $end
$var wire 1 #" out $end
$var wire 1 -" in $end
$var wire 1 /" df_in $end
$scope module and2_0 $end
$var wire 1 /" o $end
$var wire 1 ." i1 $end
$var wire 1 -" i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 # clk $end
$var wire 1 /" in $end
$var wire 1 #" out $end
$var reg 1 #" df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 & i $end
$var wire 1 ." o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 #" i0 $end
$var wire 1 $" i1 $end
$var wire 1 + j $end
$var wire 1 -" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module pc_slice_14 $end
$var wire 1 0" cin $end
$var wire 1 # clk $end
$var wire 1 $ inc $end
$var wire 1 + load $end
$var wire 1 1" offset $end
$var wire 1 & reset $end
$var wire 1 ' sub $end
$var wire 1 2" t $end
$var wire 1 3" pc $end
$var wire 1 4" in $end
$var wire 1 5" cout $end
$scope module _i0 $end
$var wire 1 1" i0 $end
$var wire 1 ' i1 $end
$var wire 1 2" o $end
$upscope $end
$scope module addsub_0 $end
$var wire 1 6" addsub $end
$var wire 1 0" cin $end
$var wire 1 2" i1 $end
$var wire 1 7" t $end
$var wire 1 4" sumdiff $end
$var wire 1 3" i0 $end
$var wire 1 5" cout $end
$scope module _i0 $end
$var wire 1 0" cin $end
$var wire 1 8" t2 $end
$var wire 1 9" t1 $end
$var wire 1 :" t0 $end
$var wire 1 4" sum $end
$var wire 1 7" i1 $end
$var wire 1 3" i0 $end
$var wire 1 5" cout $end
$scope module _i0 $end
$var wire 1 0" i2 $end
$var wire 1 ;" t $end
$var wire 1 4" o $end
$var wire 1 7" i1 $end
$var wire 1 3" i0 $end
$scope module xor2_0 $end
$var wire 1 ;" o $end
$var wire 1 7" i1 $end
$var wire 1 3" i0 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 0" i0 $end
$var wire 1 ;" i1 $end
$var wire 1 4" o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 :" o $end
$var wire 1 7" i1 $end
$var wire 1 3" i0 $end
$upscope $end
$scope module _i2 $end
$var wire 1 0" i1 $end
$var wire 1 9" o $end
$var wire 1 7" i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 0" i0 $end
$var wire 1 8" o $end
$var wire 1 3" i1 $end
$upscope $end
$scope module _i4 $end
$var wire 1 :" i0 $end
$var wire 1 9" i1 $end
$var wire 1 8" i2 $end
$var wire 1 <" t $end
$var wire 1 5" o $end
$scope module or2_0 $end
$var wire 1 :" i0 $end
$var wire 1 9" i1 $end
$var wire 1 <" o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 8" i0 $end
$var wire 1 <" i1 $end
$var wire 1 5" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 2" i0 $end
$var wire 1 6" i1 $end
$var wire 1 7" o $end
$upscope $end
$upscope $end
$scope module dfrl_0 $end
$var wire 1 # clk $end
$var wire 1 4" in $end
$var wire 1 + load $end
$var wire 1 & reset $end
$var wire 1 3" out $end
$var wire 1 =" _in $end
$scope module dfr_1 $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 1 >" reset_ $end
$var wire 1 3" out $end
$var wire 1 =" in $end
$var wire 1 ?" df_in $end
$scope module and2_0 $end
$var wire 1 ?" o $end
$var wire 1 >" i1 $end
$var wire 1 =" i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 # clk $end
$var wire 1 ?" in $end
$var wire 1 3" out $end
$var reg 1 3" df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 & i $end
$var wire 1 >" o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 3" i0 $end
$var wire 1 4" i1 $end
$var wire 1 + j $end
$var wire 1 =" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module pc_slice_15 $end
$var wire 1 @" cin $end
$var wire 1 # clk $end
$var wire 1 $ inc $end
$var wire 1 + load $end
$var wire 1 A" offset $end
$var wire 1 & reset $end
$var wire 1 ' sub $end
$var wire 1 B" t $end
$var wire 1 C" pc $end
$var wire 1 D" in $end
$var wire 1 E" cout $end
$scope module _i0 $end
$var wire 1 A" i0 $end
$var wire 1 ' i1 $end
$var wire 1 B" o $end
$upscope $end
$scope module addsub_0 $end
$var wire 1 F" addsub $end
$var wire 1 @" cin $end
$var wire 1 B" i1 $end
$var wire 1 G" t $end
$var wire 1 D" sumdiff $end
$var wire 1 C" i0 $end
$var wire 1 E" cout $end
$scope module _i0 $end
$var wire 1 @" cin $end
$var wire 1 H" t2 $end
$var wire 1 I" t1 $end
$var wire 1 J" t0 $end
$var wire 1 D" sum $end
$var wire 1 G" i1 $end
$var wire 1 C" i0 $end
$var wire 1 E" cout $end
$scope module _i0 $end
$var wire 1 @" i2 $end
$var wire 1 K" t $end
$var wire 1 D" o $end
$var wire 1 G" i1 $end
$var wire 1 C" i0 $end
$scope module xor2_0 $end
$var wire 1 K" o $end
$var wire 1 G" i1 $end
$var wire 1 C" i0 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 @" i0 $end
$var wire 1 K" i1 $end
$var wire 1 D" o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 J" o $end
$var wire 1 G" i1 $end
$var wire 1 C" i0 $end
$upscope $end
$scope module _i2 $end
$var wire 1 @" i1 $end
$var wire 1 I" o $end
$var wire 1 G" i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 @" i0 $end
$var wire 1 H" o $end
$var wire 1 C" i1 $end
$upscope $end
$scope module _i4 $end
$var wire 1 J" i0 $end
$var wire 1 I" i1 $end
$var wire 1 H" i2 $end
$var wire 1 L" t $end
$var wire 1 E" o $end
$scope module or2_0 $end
$var wire 1 J" i0 $end
$var wire 1 I" i1 $end
$var wire 1 L" o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 H" i0 $end
$var wire 1 L" i1 $end
$var wire 1 E" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 B" i0 $end
$var wire 1 F" i1 $end
$var wire 1 G" o $end
$upscope $end
$upscope $end
$scope module dfrl_0 $end
$var wire 1 # clk $end
$var wire 1 D" in $end
$var wire 1 + load $end
$var wire 1 & reset $end
$var wire 1 C" out $end
$var wire 1 M" _in $end
$scope module dfr_1 $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 1 N" reset_ $end
$var wire 1 C" out $end
$var wire 1 M" in $end
$var wire 1 O" df_in $end
$scope module and2_0 $end
$var wire 1 O" o $end
$var wire 1 N" i1 $end
$var wire 1 M" i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 # clk $end
$var wire 1 O" in $end
$var wire 1 C" out $end
$var reg 1 C" df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 & i $end
$var wire 1 N" o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 C" i0 $end
$var wire 1 D" i1 $end
$var wire 1 + j $end
$var wire 1 M" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module pc_slice_2 $end
$var wire 1 P" cin $end
$var wire 1 # clk $end
$var wire 1 $ inc $end
$var wire 1 + load $end
$var wire 1 Q" offset $end
$var wire 1 & reset $end
$var wire 1 ' sub $end
$var wire 1 R" t $end
$var wire 1 S" pc $end
$var wire 1 T" in $end
$var wire 1 U" cout $end
$scope module _i0 $end
$var wire 1 Q" i0 $end
$var wire 1 ' i1 $end
$var wire 1 R" o $end
$upscope $end
$scope module addsub_0 $end
$var wire 1 V" addsub $end
$var wire 1 P" cin $end
$var wire 1 R" i1 $end
$var wire 1 W" t $end
$var wire 1 T" sumdiff $end
$var wire 1 S" i0 $end
$var wire 1 U" cout $end
$scope module _i0 $end
$var wire 1 P" cin $end
$var wire 1 X" t2 $end
$var wire 1 Y" t1 $end
$var wire 1 Z" t0 $end
$var wire 1 T" sum $end
$var wire 1 W" i1 $end
$var wire 1 S" i0 $end
$var wire 1 U" cout $end
$scope module _i0 $end
$var wire 1 P" i2 $end
$var wire 1 [" t $end
$var wire 1 T" o $end
$var wire 1 W" i1 $end
$var wire 1 S" i0 $end
$scope module xor2_0 $end
$var wire 1 [" o $end
$var wire 1 W" i1 $end
$var wire 1 S" i0 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 P" i0 $end
$var wire 1 [" i1 $end
$var wire 1 T" o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 Z" o $end
$var wire 1 W" i1 $end
$var wire 1 S" i0 $end
$upscope $end
$scope module _i2 $end
$var wire 1 P" i1 $end
$var wire 1 Y" o $end
$var wire 1 W" i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 P" i0 $end
$var wire 1 X" o $end
$var wire 1 S" i1 $end
$upscope $end
$scope module _i4 $end
$var wire 1 Z" i0 $end
$var wire 1 Y" i1 $end
$var wire 1 X" i2 $end
$var wire 1 \" t $end
$var wire 1 U" o $end
$scope module or2_0 $end
$var wire 1 Z" i0 $end
$var wire 1 Y" i1 $end
$var wire 1 \" o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 X" i0 $end
$var wire 1 \" i1 $end
$var wire 1 U" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 R" i0 $end
$var wire 1 V" i1 $end
$var wire 1 W" o $end
$upscope $end
$upscope $end
$scope module dfrl_0 $end
$var wire 1 # clk $end
$var wire 1 T" in $end
$var wire 1 + load $end
$var wire 1 & reset $end
$var wire 1 S" out $end
$var wire 1 ]" _in $end
$scope module dfr_1 $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 1 ^" reset_ $end
$var wire 1 S" out $end
$var wire 1 ]" in $end
$var wire 1 _" df_in $end
$scope module and2_0 $end
$var wire 1 _" o $end
$var wire 1 ^" i1 $end
$var wire 1 ]" i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 # clk $end
$var wire 1 _" in $end
$var wire 1 S" out $end
$var reg 1 S" df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 & i $end
$var wire 1 ^" o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 S" i0 $end
$var wire 1 T" i1 $end
$var wire 1 + j $end
$var wire 1 ]" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module pc_slice_3 $end
$var wire 1 `" cin $end
$var wire 1 # clk $end
$var wire 1 $ inc $end
$var wire 1 + load $end
$var wire 1 a" offset $end
$var wire 1 & reset $end
$var wire 1 ' sub $end
$var wire 1 b" t $end
$var wire 1 c" pc $end
$var wire 1 d" in $end
$var wire 1 e" cout $end
$scope module _i0 $end
$var wire 1 a" i0 $end
$var wire 1 ' i1 $end
$var wire 1 b" o $end
$upscope $end
$scope module addsub_0 $end
$var wire 1 f" addsub $end
$var wire 1 `" cin $end
$var wire 1 b" i1 $end
$var wire 1 g" t $end
$var wire 1 d" sumdiff $end
$var wire 1 c" i0 $end
$var wire 1 e" cout $end
$scope module _i0 $end
$var wire 1 `" cin $end
$var wire 1 h" t2 $end
$var wire 1 i" t1 $end
$var wire 1 j" t0 $end
$var wire 1 d" sum $end
$var wire 1 g" i1 $end
$var wire 1 c" i0 $end
$var wire 1 e" cout $end
$scope module _i0 $end
$var wire 1 `" i2 $end
$var wire 1 k" t $end
$var wire 1 d" o $end
$var wire 1 g" i1 $end
$var wire 1 c" i0 $end
$scope module xor2_0 $end
$var wire 1 k" o $end
$var wire 1 g" i1 $end
$var wire 1 c" i0 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 `" i0 $end
$var wire 1 k" i1 $end
$var wire 1 d" o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 j" o $end
$var wire 1 g" i1 $end
$var wire 1 c" i0 $end
$upscope $end
$scope module _i2 $end
$var wire 1 `" i1 $end
$var wire 1 i" o $end
$var wire 1 g" i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 `" i0 $end
$var wire 1 h" o $end
$var wire 1 c" i1 $end
$upscope $end
$scope module _i4 $end
$var wire 1 j" i0 $end
$var wire 1 i" i1 $end
$var wire 1 h" i2 $end
$var wire 1 l" t $end
$var wire 1 e" o $end
$scope module or2_0 $end
$var wire 1 j" i0 $end
$var wire 1 i" i1 $end
$var wire 1 l" o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 h" i0 $end
$var wire 1 l" i1 $end
$var wire 1 e" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 b" i0 $end
$var wire 1 f" i1 $end
$var wire 1 g" o $end
$upscope $end
$upscope $end
$scope module dfrl_0 $end
$var wire 1 # clk $end
$var wire 1 d" in $end
$var wire 1 + load $end
$var wire 1 & reset $end
$var wire 1 c" out $end
$var wire 1 m" _in $end
$scope module dfr_1 $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 1 n" reset_ $end
$var wire 1 c" out $end
$var wire 1 m" in $end
$var wire 1 o" df_in $end
$scope module and2_0 $end
$var wire 1 o" o $end
$var wire 1 n" i1 $end
$var wire 1 m" i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 # clk $end
$var wire 1 o" in $end
$var wire 1 c" out $end
$var reg 1 c" df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 & i $end
$var wire 1 n" o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 c" i0 $end
$var wire 1 d" i1 $end
$var wire 1 + j $end
$var wire 1 m" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module pc_slice_4 $end
$var wire 1 p" cin $end
$var wire 1 # clk $end
$var wire 1 $ inc $end
$var wire 1 + load $end
$var wire 1 q" offset $end
$var wire 1 & reset $end
$var wire 1 ' sub $end
$var wire 1 r" t $end
$var wire 1 s" pc $end
$var wire 1 t" in $end
$var wire 1 u" cout $end
$scope module _i0 $end
$var wire 1 q" i0 $end
$var wire 1 ' i1 $end
$var wire 1 r" o $end
$upscope $end
$scope module addsub_0 $end
$var wire 1 v" addsub $end
$var wire 1 p" cin $end
$var wire 1 r" i1 $end
$var wire 1 w" t $end
$var wire 1 t" sumdiff $end
$var wire 1 s" i0 $end
$var wire 1 u" cout $end
$scope module _i0 $end
$var wire 1 p" cin $end
$var wire 1 x" t2 $end
$var wire 1 y" t1 $end
$var wire 1 z" t0 $end
$var wire 1 t" sum $end
$var wire 1 w" i1 $end
$var wire 1 s" i0 $end
$var wire 1 u" cout $end
$scope module _i0 $end
$var wire 1 p" i2 $end
$var wire 1 {" t $end
$var wire 1 t" o $end
$var wire 1 w" i1 $end
$var wire 1 s" i0 $end
$scope module xor2_0 $end
$var wire 1 {" o $end
$var wire 1 w" i1 $end
$var wire 1 s" i0 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 p" i0 $end
$var wire 1 {" i1 $end
$var wire 1 t" o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 z" o $end
$var wire 1 w" i1 $end
$var wire 1 s" i0 $end
$upscope $end
$scope module _i2 $end
$var wire 1 p" i1 $end
$var wire 1 y" o $end
$var wire 1 w" i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 p" i0 $end
$var wire 1 x" o $end
$var wire 1 s" i1 $end
$upscope $end
$scope module _i4 $end
$var wire 1 z" i0 $end
$var wire 1 y" i1 $end
$var wire 1 x" i2 $end
$var wire 1 |" t $end
$var wire 1 u" o $end
$scope module or2_0 $end
$var wire 1 z" i0 $end
$var wire 1 y" i1 $end
$var wire 1 |" o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 x" i0 $end
$var wire 1 |" i1 $end
$var wire 1 u" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 r" i0 $end
$var wire 1 v" i1 $end
$var wire 1 w" o $end
$upscope $end
$upscope $end
$scope module dfrl_0 $end
$var wire 1 # clk $end
$var wire 1 t" in $end
$var wire 1 + load $end
$var wire 1 & reset $end
$var wire 1 s" out $end
$var wire 1 }" _in $end
$scope module dfr_1 $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 1 ~" reset_ $end
$var wire 1 s" out $end
$var wire 1 }" in $end
$var wire 1 !# df_in $end
$scope module and2_0 $end
$var wire 1 !# o $end
$var wire 1 ~" i1 $end
$var wire 1 }" i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 # clk $end
$var wire 1 !# in $end
$var wire 1 s" out $end
$var reg 1 s" df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 & i $end
$var wire 1 ~" o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 s" i0 $end
$var wire 1 t" i1 $end
$var wire 1 + j $end
$var wire 1 }" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module pc_slice_5 $end
$var wire 1 "# cin $end
$var wire 1 # clk $end
$var wire 1 $ inc $end
$var wire 1 + load $end
$var wire 1 ## offset $end
$var wire 1 & reset $end
$var wire 1 ' sub $end
$var wire 1 $# t $end
$var wire 1 %# pc $end
$var wire 1 &# in $end
$var wire 1 '# cout $end
$scope module _i0 $end
$var wire 1 ## i0 $end
$var wire 1 ' i1 $end
$var wire 1 $# o $end
$upscope $end
$scope module addsub_0 $end
$var wire 1 (# addsub $end
$var wire 1 "# cin $end
$var wire 1 $# i1 $end
$var wire 1 )# t $end
$var wire 1 &# sumdiff $end
$var wire 1 %# i0 $end
$var wire 1 '# cout $end
$scope module _i0 $end
$var wire 1 "# cin $end
$var wire 1 *# t2 $end
$var wire 1 +# t1 $end
$var wire 1 ,# t0 $end
$var wire 1 &# sum $end
$var wire 1 )# i1 $end
$var wire 1 %# i0 $end
$var wire 1 '# cout $end
$scope module _i0 $end
$var wire 1 "# i2 $end
$var wire 1 -# t $end
$var wire 1 &# o $end
$var wire 1 )# i1 $end
$var wire 1 %# i0 $end
$scope module xor2_0 $end
$var wire 1 -# o $end
$var wire 1 )# i1 $end
$var wire 1 %# i0 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 "# i0 $end
$var wire 1 -# i1 $end
$var wire 1 &# o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 ,# o $end
$var wire 1 )# i1 $end
$var wire 1 %# i0 $end
$upscope $end
$scope module _i2 $end
$var wire 1 "# i1 $end
$var wire 1 +# o $end
$var wire 1 )# i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 "# i0 $end
$var wire 1 *# o $end
$var wire 1 %# i1 $end
$upscope $end
$scope module _i4 $end
$var wire 1 ,# i0 $end
$var wire 1 +# i1 $end
$var wire 1 *# i2 $end
$var wire 1 .# t $end
$var wire 1 '# o $end
$scope module or2_0 $end
$var wire 1 ,# i0 $end
$var wire 1 +# i1 $end
$var wire 1 .# o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 *# i0 $end
$var wire 1 .# i1 $end
$var wire 1 '# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 $# i0 $end
$var wire 1 (# i1 $end
$var wire 1 )# o $end
$upscope $end
$upscope $end
$scope module dfrl_0 $end
$var wire 1 # clk $end
$var wire 1 &# in $end
$var wire 1 + load $end
$var wire 1 & reset $end
$var wire 1 %# out $end
$var wire 1 /# _in $end
$scope module dfr_1 $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 1 0# reset_ $end
$var wire 1 %# out $end
$var wire 1 /# in $end
$var wire 1 1# df_in $end
$scope module and2_0 $end
$var wire 1 1# o $end
$var wire 1 0# i1 $end
$var wire 1 /# i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 # clk $end
$var wire 1 1# in $end
$var wire 1 %# out $end
$var reg 1 %# df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 & i $end
$var wire 1 0# o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 %# i0 $end
$var wire 1 &# i1 $end
$var wire 1 + j $end
$var wire 1 /# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module pc_slice_6 $end
$var wire 1 2# cin $end
$var wire 1 # clk $end
$var wire 1 $ inc $end
$var wire 1 + load $end
$var wire 1 3# offset $end
$var wire 1 & reset $end
$var wire 1 ' sub $end
$var wire 1 4# t $end
$var wire 1 5# pc $end
$var wire 1 6# in $end
$var wire 1 7# cout $end
$scope module _i0 $end
$var wire 1 3# i0 $end
$var wire 1 ' i1 $end
$var wire 1 4# o $end
$upscope $end
$scope module addsub_0 $end
$var wire 1 8# addsub $end
$var wire 1 2# cin $end
$var wire 1 4# i1 $end
$var wire 1 9# t $end
$var wire 1 6# sumdiff $end
$var wire 1 5# i0 $end
$var wire 1 7# cout $end
$scope module _i0 $end
$var wire 1 2# cin $end
$var wire 1 :# t2 $end
$var wire 1 ;# t1 $end
$var wire 1 <# t0 $end
$var wire 1 6# sum $end
$var wire 1 9# i1 $end
$var wire 1 5# i0 $end
$var wire 1 7# cout $end
$scope module _i0 $end
$var wire 1 2# i2 $end
$var wire 1 =# t $end
$var wire 1 6# o $end
$var wire 1 9# i1 $end
$var wire 1 5# i0 $end
$scope module xor2_0 $end
$var wire 1 =# o $end
$var wire 1 9# i1 $end
$var wire 1 5# i0 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 2# i0 $end
$var wire 1 =# i1 $end
$var wire 1 6# o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 <# o $end
$var wire 1 9# i1 $end
$var wire 1 5# i0 $end
$upscope $end
$scope module _i2 $end
$var wire 1 2# i1 $end
$var wire 1 ;# o $end
$var wire 1 9# i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 2# i0 $end
$var wire 1 :# o $end
$var wire 1 5# i1 $end
$upscope $end
$scope module _i4 $end
$var wire 1 <# i0 $end
$var wire 1 ;# i1 $end
$var wire 1 :# i2 $end
$var wire 1 ># t $end
$var wire 1 7# o $end
$scope module or2_0 $end
$var wire 1 <# i0 $end
$var wire 1 ;# i1 $end
$var wire 1 ># o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 :# i0 $end
$var wire 1 ># i1 $end
$var wire 1 7# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 4# i0 $end
$var wire 1 8# i1 $end
$var wire 1 9# o $end
$upscope $end
$upscope $end
$scope module dfrl_0 $end
$var wire 1 # clk $end
$var wire 1 6# in $end
$var wire 1 + load $end
$var wire 1 & reset $end
$var wire 1 5# out $end
$var wire 1 ?# _in $end
$scope module dfr_1 $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 1 @# reset_ $end
$var wire 1 5# out $end
$var wire 1 ?# in $end
$var wire 1 A# df_in $end
$scope module and2_0 $end
$var wire 1 A# o $end
$var wire 1 @# i1 $end
$var wire 1 ?# i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 # clk $end
$var wire 1 A# in $end
$var wire 1 5# out $end
$var reg 1 5# df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 & i $end
$var wire 1 @# o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 5# i0 $end
$var wire 1 6# i1 $end
$var wire 1 + j $end
$var wire 1 ?# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module pc_slice_7 $end
$var wire 1 B# cin $end
$var wire 1 # clk $end
$var wire 1 $ inc $end
$var wire 1 + load $end
$var wire 1 C# offset $end
$var wire 1 & reset $end
$var wire 1 ' sub $end
$var wire 1 D# t $end
$var wire 1 E# pc $end
$var wire 1 F# in $end
$var wire 1 G# cout $end
$scope module _i0 $end
$var wire 1 C# i0 $end
$var wire 1 ' i1 $end
$var wire 1 D# o $end
$upscope $end
$scope module addsub_0 $end
$var wire 1 H# addsub $end
$var wire 1 B# cin $end
$var wire 1 D# i1 $end
$var wire 1 I# t $end
$var wire 1 F# sumdiff $end
$var wire 1 E# i0 $end
$var wire 1 G# cout $end
$scope module _i0 $end
$var wire 1 B# cin $end
$var wire 1 J# t2 $end
$var wire 1 K# t1 $end
$var wire 1 L# t0 $end
$var wire 1 F# sum $end
$var wire 1 I# i1 $end
$var wire 1 E# i0 $end
$var wire 1 G# cout $end
$scope module _i0 $end
$var wire 1 B# i2 $end
$var wire 1 M# t $end
$var wire 1 F# o $end
$var wire 1 I# i1 $end
$var wire 1 E# i0 $end
$scope module xor2_0 $end
$var wire 1 M# o $end
$var wire 1 I# i1 $end
$var wire 1 E# i0 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 B# i0 $end
$var wire 1 M# i1 $end
$var wire 1 F# o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 L# o $end
$var wire 1 I# i1 $end
$var wire 1 E# i0 $end
$upscope $end
$scope module _i2 $end
$var wire 1 B# i1 $end
$var wire 1 K# o $end
$var wire 1 I# i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 B# i0 $end
$var wire 1 J# o $end
$var wire 1 E# i1 $end
$upscope $end
$scope module _i4 $end
$var wire 1 L# i0 $end
$var wire 1 K# i1 $end
$var wire 1 J# i2 $end
$var wire 1 N# t $end
$var wire 1 G# o $end
$scope module or2_0 $end
$var wire 1 L# i0 $end
$var wire 1 K# i1 $end
$var wire 1 N# o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 J# i0 $end
$var wire 1 N# i1 $end
$var wire 1 G# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 D# i0 $end
$var wire 1 H# i1 $end
$var wire 1 I# o $end
$upscope $end
$upscope $end
$scope module dfrl_0 $end
$var wire 1 # clk $end
$var wire 1 F# in $end
$var wire 1 + load $end
$var wire 1 & reset $end
$var wire 1 E# out $end
$var wire 1 O# _in $end
$scope module dfr_1 $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 1 P# reset_ $end
$var wire 1 E# out $end
$var wire 1 O# in $end
$var wire 1 Q# df_in $end
$scope module and2_0 $end
$var wire 1 Q# o $end
$var wire 1 P# i1 $end
$var wire 1 O# i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 # clk $end
$var wire 1 Q# in $end
$var wire 1 E# out $end
$var reg 1 E# df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 & i $end
$var wire 1 P# o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 E# i0 $end
$var wire 1 F# i1 $end
$var wire 1 + j $end
$var wire 1 O# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module pc_slice_8 $end
$var wire 1 R# cin $end
$var wire 1 # clk $end
$var wire 1 $ inc $end
$var wire 1 + load $end
$var wire 1 S# offset $end
$var wire 1 & reset $end
$var wire 1 ' sub $end
$var wire 1 T# t $end
$var wire 1 U# pc $end
$var wire 1 V# in $end
$var wire 1 W# cout $end
$scope module _i0 $end
$var wire 1 S# i0 $end
$var wire 1 ' i1 $end
$var wire 1 T# o $end
$upscope $end
$scope module addsub_0 $end
$var wire 1 X# addsub $end
$var wire 1 R# cin $end
$var wire 1 T# i1 $end
$var wire 1 Y# t $end
$var wire 1 V# sumdiff $end
$var wire 1 U# i0 $end
$var wire 1 W# cout $end
$scope module _i0 $end
$var wire 1 R# cin $end
$var wire 1 Z# t2 $end
$var wire 1 [# t1 $end
$var wire 1 \# t0 $end
$var wire 1 V# sum $end
$var wire 1 Y# i1 $end
$var wire 1 U# i0 $end
$var wire 1 W# cout $end
$scope module _i0 $end
$var wire 1 R# i2 $end
$var wire 1 ]# t $end
$var wire 1 V# o $end
$var wire 1 Y# i1 $end
$var wire 1 U# i0 $end
$scope module xor2_0 $end
$var wire 1 ]# o $end
$var wire 1 Y# i1 $end
$var wire 1 U# i0 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 R# i0 $end
$var wire 1 ]# i1 $end
$var wire 1 V# o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 \# o $end
$var wire 1 Y# i1 $end
$var wire 1 U# i0 $end
$upscope $end
$scope module _i2 $end
$var wire 1 R# i1 $end
$var wire 1 [# o $end
$var wire 1 Y# i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 R# i0 $end
$var wire 1 Z# o $end
$var wire 1 U# i1 $end
$upscope $end
$scope module _i4 $end
$var wire 1 \# i0 $end
$var wire 1 [# i1 $end
$var wire 1 Z# i2 $end
$var wire 1 ^# t $end
$var wire 1 W# o $end
$scope module or2_0 $end
$var wire 1 \# i0 $end
$var wire 1 [# i1 $end
$var wire 1 ^# o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 Z# i0 $end
$var wire 1 ^# i1 $end
$var wire 1 W# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 T# i0 $end
$var wire 1 X# i1 $end
$var wire 1 Y# o $end
$upscope $end
$upscope $end
$scope module dfrl_0 $end
$var wire 1 # clk $end
$var wire 1 V# in $end
$var wire 1 + load $end
$var wire 1 & reset $end
$var wire 1 U# out $end
$var wire 1 _# _in $end
$scope module dfr_1 $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 1 `# reset_ $end
$var wire 1 U# out $end
$var wire 1 _# in $end
$var wire 1 a# df_in $end
$scope module and2_0 $end
$var wire 1 a# o $end
$var wire 1 `# i1 $end
$var wire 1 _# i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 # clk $end
$var wire 1 a# in $end
$var wire 1 U# out $end
$var reg 1 U# df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 & i $end
$var wire 1 `# o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 U# i0 $end
$var wire 1 V# i1 $end
$var wire 1 + j $end
$var wire 1 _# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module pc_slice_9 $end
$var wire 1 b# cin $end
$var wire 1 # clk $end
$var wire 1 $ inc $end
$var wire 1 + load $end
$var wire 1 c# offset $end
$var wire 1 & reset $end
$var wire 1 ' sub $end
$var wire 1 d# t $end
$var wire 1 e# pc $end
$var wire 1 f# in $end
$var wire 1 g# cout $end
$scope module _i0 $end
$var wire 1 c# i0 $end
$var wire 1 ' i1 $end
$var wire 1 d# o $end
$upscope $end
$scope module addsub_0 $end
$var wire 1 h# addsub $end
$var wire 1 b# cin $end
$var wire 1 d# i1 $end
$var wire 1 i# t $end
$var wire 1 f# sumdiff $end
$var wire 1 e# i0 $end
$var wire 1 g# cout $end
$scope module _i0 $end
$var wire 1 b# cin $end
$var wire 1 j# t2 $end
$var wire 1 k# t1 $end
$var wire 1 l# t0 $end
$var wire 1 f# sum $end
$var wire 1 i# i1 $end
$var wire 1 e# i0 $end
$var wire 1 g# cout $end
$scope module _i0 $end
$var wire 1 b# i2 $end
$var wire 1 m# t $end
$var wire 1 f# o $end
$var wire 1 i# i1 $end
$var wire 1 e# i0 $end
$scope module xor2_0 $end
$var wire 1 m# o $end
$var wire 1 i# i1 $end
$var wire 1 e# i0 $end
$upscope $end
$scope module xor2_1 $end
$var wire 1 b# i0 $end
$var wire 1 m# i1 $end
$var wire 1 f# o $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 l# o $end
$var wire 1 i# i1 $end
$var wire 1 e# i0 $end
$upscope $end
$scope module _i2 $end
$var wire 1 b# i1 $end
$var wire 1 k# o $end
$var wire 1 i# i0 $end
$upscope $end
$scope module _i3 $end
$var wire 1 b# i0 $end
$var wire 1 j# o $end
$var wire 1 e# i1 $end
$upscope $end
$scope module _i4 $end
$var wire 1 l# i0 $end
$var wire 1 k# i1 $end
$var wire 1 j# i2 $end
$var wire 1 n# t $end
$var wire 1 g# o $end
$scope module or2_0 $end
$var wire 1 l# i0 $end
$var wire 1 k# i1 $end
$var wire 1 n# o $end
$upscope $end
$scope module or2_1 $end
$var wire 1 j# i0 $end
$var wire 1 n# i1 $end
$var wire 1 g# o $end
$upscope $end
$upscope $end
$upscope $end
$scope module _i1 $end
$var wire 1 d# i0 $end
$var wire 1 h# i1 $end
$var wire 1 i# o $end
$upscope $end
$upscope $end
$scope module dfrl_0 $end
$var wire 1 # clk $end
$var wire 1 f# in $end
$var wire 1 + load $end
$var wire 1 & reset $end
$var wire 1 e# out $end
$var wire 1 o# _in $end
$scope module dfr_1 $end
$var wire 1 # clk $end
$var wire 1 & reset $end
$var wire 1 p# reset_ $end
$var wire 1 e# out $end
$var wire 1 o# in $end
$var wire 1 q# df_in $end
$scope module and2_0 $end
$var wire 1 q# o $end
$var wire 1 p# i1 $end
$var wire 1 o# i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 # clk $end
$var wire 1 q# in $end
$var wire 1 e# out $end
$var reg 1 e# df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 & i $end
$var wire 1 p# o $end
$upscope $end
$upscope $end
$scope module mux2_0 $end
$var wire 1 e# i0 $end
$var wire 1 f# i1 $end
$var wire 1 + j $end
$var wire 1 o# o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0q#
0p#
xo#
0n#
xm#
0l#
0k#
0j#
0i#
0h#
0g#
xf#
xe#
0d#
0c#
0b#
0a#
0`#
x_#
0^#
x]#
0\#
0[#
0Z#
0Y#
0X#
0W#
xV#
xU#
0T#
0S#
0R#
0Q#
0P#
xO#
0N#
xM#
0L#
0K#
0J#
0I#
0H#
0G#
xF#
xE#
0D#
0C#
0B#
0A#
0@#
x?#
0>#
x=#
0<#
0;#
0:#
09#
08#
07#
x6#
x5#
04#
03#
02#
01#
00#
x/#
0.#
x-#
0,#
0+#
0*#
0)#
0(#
0'#
x&#
x%#
0$#
0##
0"#
0!#
0~"
x}"
0|"
x{"
0z"
0y"
0x"
0w"
0v"
0u"
xt"
xs"
0r"
0q"
0p"
0o"
0n"
xm"
0l"
xk"
0j"
0i"
0h"
0g"
0f"
0e"
xd"
xc"
0b"
0a"
0`"
0_"
0^"
x]"
0\"
x["
0Z"
0Y"
0X"
0W"
0V"
0U"
xT"
xS"
0R"
0Q"
0P"
0O"
0N"
xM"
0L"
xK"
0J"
0I"
0H"
0G"
0F"
0E"
xD"
xC"
0B"
0A"
0@"
0?"
0>"
x="
0<"
x;"
0:"
09"
08"
07"
06"
05"
x4"
x3"
02"
01"
00"
0/"
0."
x-"
0,"
x+"
0*"
0)"
0("
0'"
0&"
0%"
x$"
x#"
0""
0!"
0~
0}
0|
x{
0z
xy
0x
0w
0v
0u
0t
0s
xr
xq
0p
0o
0n
0m
0l
xk
0j
xi
0h
0g
0f
0e
0d
0c
xb
xa
0`
0_
0^
0]
0\
x[
0Z
xY
0X
0W
0V
0U
0T
0S
xR
xQ
0P
0O
0N
0M
0L
xK
0J
xI
0H
0G
0F
0E
0D
0C
xB
xA
0@
0?
0>
0=
0<
x;
0:
x9
08
07
06
05
04
03
x2
x1
00
0/
0.
0-
b0 ,
0+
bx *
b0 )
bx (
0'
1&
b0 %
0$
0#
0"
bx !
$end
#50
02
0B
0T"
0d"
0t"
0&#
06#
0F#
0V#
0f#
0R
0b
0r
0$"
04"
0D"
0;
09
0K
0I
0]"
0["
0m"
0k"
0}"
0{"
0/#
0-#
0?#
0=#
0O#
0M#
0_#
0]#
0o#
0m#
0[
0Y
0k
0i
0{
0y
0-"
0+"
0="
0;"
0M"
0K"
01
0A
0S"
0c"
0s"
0%#
05#
0E#
0U#
0e#
0Q
0a
0q
0#"
03"
b0 !
b0 *
0C"
1#
#60
b0 (
#100
0#
#125
1<
1L
1\
1l
1|
1."
1>"
1N"
1^"
1n"
1~"
10#
1@#
1P#
1`#
1p#
0&
#150
1#
#160
xO"
xM"
xD"
x@"
x5"
x<"
x9"
x0"
x%"
x,"
x)"
x~
xs
xz
xw
xn
xc
xj
xg
x^
xS
xZ
xW
xN
xg#
xn#
xk#
xb#
xW#
x^#
x[#
xR#
xG#
xN#
xK#
xB#
x7#
x>#
x;#
x2#
x'#
x.#
x+#
x"#
xu"
x|"
xy"
xp"
xe"
xl"
xi"
x`"
xU"
x\"
xY"
xP"
xC
xJ
xG
x>
xM
x_"
xo"
x!#
x1#
xA#
xQ#
xa#
xq#
x]
xm
x}
x/"
x?"
b0xxxxxxxxxxxxxxx ,
x3
xK
x]"
xm"
x}"
x/#
x?#
xO#
x_#
xo#
x[
xk
x{
x-"
x="
x:
xB
xT"
xd"
xt"
x&#
x6#
xF#
xV#
xf#
xR
xb
xr
x$"
x4"
x7
x9
xI
x["
xk"
x{"
x-#
x=#
xM#
x]#
xm#
xY
xi
xy
x+"
x;"
x=
x5
xE
xW"
xg"
xw"
x)#
x9#
xI#
xY#
xi#
xU
xe
xu
x'"
x7"
x;
x0
x@
xR"
xb"
xr"
x$#
x4#
xD#
xT#
xd#
xP
x`
xp
x""
x2"
1+
x2
x/
x?
xQ"
xa"
xq"
x##
x3#
xC#
xS#
xc#
xO
x_
xo
x!"
x1"
b1 (
1$
b0xxxxxxxxxxxxxxx %
b0xxxxxxxxxxxxxxx )
#200
0#
#250
bx ,
xE"
x6
x8
xF
xH
xX"
xZ"
xh"
xj"
xx"
xz"
x*#
x,#
x:#
x<#
xJ#
xL#
xZ#
x\#
xj#
xl#
xV
xX
xf
xh
xv
xx
x("
x*"
x8"
x:"
xH"
xK"
x1
xA
xS"
xc"
xs"
x%#
x5#
xE#
xU#
xe#
xQ
xa
xq
x#"
x3"
bx !
bx *
xC"
1#
#260
0J
0l"
0|"
0>#
0^#
0n#
0Z
0j
0z
0,"
0<"
0G
0H
0i"
0j"
0y"
0z"
0;#
0<#
0[#
0\#
0k#
0l#
0W
0X
0g
0h
0w
0x
0)"
0*"
09"
0:"
15
0E
1W"
0g"
0w"
1)#
09#
1I#
0Y#
0i#
0U
0e
0u
0'"
07"
10
0@
1R"
0b"
0r"
1$#
04#
1D#
0T#
0d#
0P
0`
0p
0""
02"
07
06
1-
1/
0?
1Q"
0a"
0q"
1##
03#
1C#
0S#
0c#
0O
0_
0o
0!"
01"
b10 (
0$
1"
b10100101 %
b10100101 )
#300
0#
#350
1#
#360
xJ
xl"
x|"
x>#
x^#
xn#
xZ
xj
xz
x,"
x<"
xG
xH
xi"
xj"
xy"
xz"
x;#
x<#
x[#
x\#
xk#
xl#
xW
xX
xg
xh
xw
xx
x)"
x*"
x9"
x:"
x5
xE
xW"
xg"
xw"
x)#
x9#
xI#
xY#
xi#
xU
xe
xu
x'"
x7"
0+
x0
x@
xR"
xb"
xr"
x$#
x4#
xD#
xT#
xd#
xP
x`
xp
x""
x2"
0-
x/
x?
xQ"
xa"
xq"
x##
x3#
xC#
xS#
xc#
xO
x_
xo
x!"
x1"
b11 (
0"
b0xxxxxxxxxxxxxxx %
b0xxxxxxxxxxxxxxx )
#400
0#
#450
1#
#460
1+
x7
x6
b100 (
1$
#500
0#
#550
1#
#560
xL"
0\"
0|"
xI"
xJ"
0Y"
0Z"
0y"
0z"
15
1E
1U
1e
1u
1'"
17"
1G"
0W"
1g"
0w"
1)#
19#
1I#
1Y#
1i#
07
06
1-
10
1@
1P
1`
1p
1""
12"
1B"
0R"
1b"
0r"
1$#
14#
1D#
1T#
1d#
0/
0?
1Q"
0a"
1q"
0##
03#
0C#
0S#
0c#
0O
0_
0o
0!"
01"
b101 (
0$
1'
b10100 %
b10100 )
#600
0#
#650
1#
#700
0#
#750
1#
#800
0#
#850
1#
#900
0#
#950
1#
#1000
0#
#1050
1#
#1100
0#
#1150
1#
#1200
0#
#1250
1#
#1300
0#
#1350
1#
#1400
0#
#1450
1#
#1500
0#
#1550
1#
#1560
